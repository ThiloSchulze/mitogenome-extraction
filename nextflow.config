params {
    // Mandatory options
    contigs                 = null
    mitogenome              = null
    reads                   = null

    // Non-mandatory options
    output                  = "mitogenome-extraction"
    species_id              = null
    help                    = false
  
    // Mitogenome extraction
    coverage_cutoff         = 6
    min_blast_wordsize      = 11
    max_blast_wordsize      = 25
    nucleotide_size         = 16500
  
    // NOVOPlasty settings
    min_size                = 12000
    max_size                = 22000
    kmer_size               = 33
    max_memory              = 6
    read_length             = 151
    insert_size             = 300
  
    // MITOS settings
    mitos_reference         = "refseq63m"
    genetic_code            = '05'
  
    // Flow control
    skip_identification     = false
  
    // Resource allocation (default values only, expected to be overwritten)
    max_retries           = 3
    max_cpus              = 4
    // Memory allocation guide:
    //   B = bytes, KB = kilobytes, MB = megabytes, GB = gigabytes, and
    //   TB = terabytes
    //   Example: 32.GB
    max_memory            = 10.GB

}

process {
    withLabel:process_low {
        //multiply cpu and memory by task attempt (up to 3)
        cpus           = { 4 }
        memory         = { 6.GB }
        errorStrategy  = { 'finish' }
        //maxRetries     = params.max_retries
    }
    withLabel:process_medium {
        cpus           = { 4 * task.attempt < params.max_cpus ?
                           4 * task.attempt : params.max_cpus }
        memory         = { 8.GB * task.attempt < params.max_memory ?
                           8.GB * task.attempt : params.max_memory }
        errorStrategy  = { 'retry' }
        maxRetries     = params.max_retries
    }
    withLabel:process_high {
        cpus           = { 4 * task.attempt < params.max_cpus ?
                           4 * task.attempt : params.max_cpus }
        memory         = { 10.GB * task.attempt < params.max_memory ?
                           10.GB * task.attempt : params.max_memory }
        errorStrategy  = { 'finish' }
  //    maxRetries     = params.max_retries
  }
}

profiles {

    /*
    
    List of Dockerimages:

    seqkit:     pegi3s/seqkit:2.1.0
    blast:      pegi3s/blast:2.10.0
    novoplasty: cyverse/novoplasty:3.7
    emboss:     biocontainers/emboss:v6.6.0dfsg-7b1-deb_cv1
    mitos:      nanozoo/mitos:2.0.8--c87ec9c
    
    */

    local {
        docker.enabled = true
        process {
            withName: extract_mitogenome {
                container = 'blah'
            }
            withName: strand_control {
                container = 'blah'
            }
            withName: annotate_mitogenome {
                container = 'blah'
            }
        }
    }

    slurm_cluster {
        singularity.enabled = true
        singularity.cacheDir = 'cache'
        singularity.autoMounts = true

        executor {
            name = 'slurm'
            queueSize = 50
            submitRateLimit = '10 sec'
        }

        process {
            withName: extract_mitogenome {
                container = 'blah'
            }
            withName: strand_control {
                container = 'blah'
            }
            withName: annotate_mitogenome {
                container = 'blah'
            }
        }
    }
}
